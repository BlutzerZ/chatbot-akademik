"""feedback

Revision ID: 10e015470588
Revises: 72833c8b9ac1
Create Date: 2024-11-26 06:59:53.503275

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '10e015470588'
down_revision: Union[str, None] = '72833c8b9ac1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'assistant_message', ['id'])
    op.create_unique_constraint(None, 'conversation', ['id'])
    op.create_unique_constraint(None, 'feedback', ['id'])
    op.create_unique_constraint(None, 'feedback_correction', ['id'])
    op.create_unique_constraint(None, 'generation_log', ['id'])
    op.create_unique_constraint(None, 'message', ['id'])
    op.create_unique_constraint(None, 'model', ['id'])
    op.create_unique_constraint(None, 'role', ['id'])
    op.create_unique_constraint(None, 'user', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'role', type_='unique')
    op.drop_constraint(None, 'model', type_='unique')
    op.drop_constraint(None, 'message', type_='unique')
    op.drop_constraint(None, 'generation_log', type_='unique')
    op.drop_constraint(None, 'feedback_correction', type_='unique')
    op.drop_constraint(None, 'feedback', type_='unique')
    op.drop_constraint(None, 'conversation', type_='unique')
    op.drop_constraint(None, 'assistant_message', type_='unique')
    # ### end Alembic commands ###
